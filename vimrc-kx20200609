set nu

syntax on

set showmode 

set showcmd

set encoding=utf-8

set autoindent 

set noeb
"
set confirm
"
set autoindent
set cindent
"
set tabstop=4
"
set softtabstop=4
set shiftwidth=4

set cursorline

set textwidth=80

set showmatch

set hlsearch

set incsearch

set ignorecase

set noerrorbells

set autochdir

set visualbell

set autoread

set wildmenu

set wildmode=longest:list,full

colorscheme pulumi 

inoremap ( ()<ESC>i
inoremap ) <c-r>=ClosePair(')')<CR>
inoremap [ []<ESC>i
inoremap ] <c-r>=ClosePair(']')<CR>
inoremap " ""<ESC>i
inoremap ' ''<ESC>i



set clipboard+=unnamed
set smartindent
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible
filetype off

set rtp+=~/.vim/vundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'Yggdroot/indentLine'
Plugin 'tell-k/vim-autopep8'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'nvie/vim-flake8'
Plugin 'sillybun/vim-repl'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'pgavlin/pulumi.vim'
""Plugin 'gmarik/Vundle.vim'
call vundle#end()
filetype plugin indent on
""NerdTree profile
let g:NERDTreeDirArrowExpandable = '+'
let g:NERDTreeDirArrowCollapsible = '-'

let g:NERDTreeWinPos = 'left'
let g:NERDTreeSize =10 
let g:NERDTreeHidden = 0
let g:NERDTreeShowLineNumbers = 1
map <f2> :NERDTreeToggle<cr>
""autocmd BufRead * 25vsp ./
""
"""""""""""""""""""""""""""""""set indentLine"""""""""""""""""""""""""""""""
""let g:indentLine_char='|'
let g:indentLine_enabled = 1
let g:autopep8_disable_show_diff=1
autocmd FileType pythonnoremap <buffer> <F8> :call Autopep8()<CR>
"""""""""""""""""""""""""""""""set vim-airline"""""""""""""""""""""""""""""""
""let g:airline_theme="moloai" 

"这个是安装字体后 必须设置此项" 
""let g:airline_powerline_fonts = 1   
 
 "打开tabline功能,方便查看Buffer和切换，这个功能比较不错"
 "我还省去了minibufexpl插件，因为我习惯在1个Tab下用多个buffer"
""let g:airline#extensions#tabline#buffer_nr_show=1

 " 关闭状态显示空白符号计数,这个对我用处不大"
let g:airline#extensions#whitespace#enabled = 0
let g:airline#extensions#whitespace#symbol='!'

""if !exists('g:airline_symbols')
""let g:airline_symbols = {}
""endif
""let g:airline_left_sep = '▶'
""let g:airline_left_alt_sep = '❯'
""let g:airline_right_sep = '◀'
""let g:airline_right_alt_sep = '❮'
""let g:airline_symbols.linenr = '¶'
""let g:airline_symbols.branch = '⎇'
""
" 是否打开tabline

if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.linenr = '☰'
let g:airline_symbols.branch = '¶'
let g:airline_symbols.maxlinenr = '㏑'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.whitespace = 'Ξ'

set laststatus=2
set t_Co=256
set encoding=utf-8
set langmenu=zh_CN.UTF-8
set ambiwidth=double

""let g:airline#extensions#tabline#enabled=1 "顶部tab显示"
nmap <tab> :bn<cr> "设置tab键映射"
""""""""""""""""""""""""""""""set taglist"""""""""""""""""""""""""""""""""""""""""
let Tlist_Show_One_File=1     "不同时显示多个文件的tag，只显示当前文件的    
let Tlist_Exit_OnlyWindow=1   "如果taglist窗口是最后一个窗口，则退出vim   
let Tlist_Ctags_Cmd="/usr/bin/ctags" "将taglist与ctags关联  
let Tlist_Use_Right_Window=1
let Tlist_File_Fold_Auto_Close=1
let Tlist_GainFocus_On_ToggleOpen=1
""let Tlist_Auto_Open=1
let Tlist_WinWidth=30
map <f3> :Tlist<cr>
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"  Title of new file
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
autocmd BufNewFile *.cpp,*.[ch],*.py,*.sh,*.java exec ":call SetTitle()" 
"
func SetTitle() 
    if &filetype == 'python'
		call setline(1,"\# -*- coding:utf-8 -*-") 
        call append(line("."), "'''")
        call append(line(".")+1, "---------------------------------------------------------")
		call append(line(".")+2," File Name: ".expand("%"))
		call append(line(".")+3, " Author:kuangxiong")
		call append(line(".")+4, " Mail: kuangxiong@lsec.cc.ac.cn")
		call append(line(".")+5, " Created Time: ".strftime("%c")) 
        call append(line(".")+6, "---------------------------------------------------------")
        call append(line(".")+7, "'''")
    elseif &filetype == 'sh' 
		call setline(1,"\#########################################################################") 
		call append(line("."), "\# File Name: ".expand("%")) 
		call append(line(".")+1, "\# Author:kuangxiong ") 
		call append(line(".")+2, "\# mail:kuangxiong@lsec.cc.ac.cn ") 
		call append(line(".")+3, "\# Created Time: ".strftime("%c")) 
		call append(line(".")+4, "\#########################################################################") 
		call append(line(".")+5, "\#!/bin/bash") 
		call append(line(".")+6, "") 
	elseif &filetype=='c' 
		call setline(1, "/*************************************************************************") 
		call append(line("."), "	> File Name: ".expand("%")) 
		call append(line(".")+1, "	> Author:kuangxiong ") 
		call append(line(".")+2, "	> Mail: kuangxiong@lsec.cc.ac.cn") 
		call append(line(".")+3, "	> Created Time: ".strftime("%c")) 
		call append(line(".")+4, " ************************************************************************/") 
		call append(line(".")+5, "")
""	endif
""    if &filetype == 'cpp'
""		call append(line(".")+6, "#include <iostream>")
""		call append(line(".")+7, "using namespace std;")
""		call append(line(".")+8, "")
""	endif
 ""   if &filetype == 'c'
		call append(line(".")+6, "#include <stdio.h>")
		call append(line(".")+7, "#include <stdlib.h>")
		call append(line(".")+8, "#include <math.h>")
		call append(line(".")+9, "")
		call append(line(".")+10, "int main(int argc, char* argv[])")
""	endif
    endif
	"	if &filetype == 'java'
	"		call append(line(".")+6,"public class ".expand("%"))
	"		call append(line(".")+7,"")
	"	endif
	"
	autocmd BufNewFile * normal G
endfunc 

"一键运行代码
map <F5> :call CompileRunGcc()<CR>
    func! CompileRunGcc()
        exec "w"
if &filetype == 'c'
            exec "!g++ % -o %<"
            exec "!time ./%<"
elseif &filetype == 'cpp'
            exec "!g++ % -o %<"
            exec "!time ./%<"
elseif &filetype == 'java'
            exec "!javac %"
            exec "!time java %<"
elseif &filetype == 'sh'
            :!time bash %
elseif &filetype == 'python'
            exec "!time python3 %"
elseif &filetype == 'html'
            exec "!firefox % &"
elseif &filetype == 'go'
    "        exec "!go build %<"
            exec "!time go run %"
elseif &filetype == 'mkd'
            exec "!~/.vim/markdown.pl % > %.html &"
            exec "!firefox %.html &"
endif
    endfunc
"""""""""""""""""""""set REPL"""""""""""""""""""""""""""""""
""let g:repl_program={'python':'ipython','default'='zsh','r'='R','lua':'lua'}
let g:repl_predefine_python={'numpy':'import numpy as np', 'matplotlib':'from matplotlib import pyplot as plt'}
let g:repl_cursor_down = 1
let g:repl_python_automerge = 1
let g:repl_ipython_version = '7'
nnoremap <C-r>: REPLToggle<Cr>
autocmd Filetype python nnoremap <F12>  <Esc>:REPLDebugStopAtCurrentLine<Cr>
autocmd Filetype python nnoremap <F10>  <Esc>:REPLPDBN<Cr>
autocmd Filetype python nnoremap <F12>  <Esc>:REPLPDBS<Cr>
let g:repl_positon = 3

set bsdir=buffer
inoremap <C-h> <Left>
inoremap <C-j> <Down>
inoremap <C-k> <Up>
inoremap <C-l> <Right>
inoremap <C-o> <Esc>o
inoremap <C-a> <Home>
inoremap <C-e> <End>
inoremap <C-s> <Esc>:w<CR>
inoremap <C-f> <Esc>
inoremap <C-x> <Esc><Right>xi
inoremap <C-d> <Esc>ddi
inoremap <C-p> <Esc>pi
inoremap <C-y> <Esc>yyi
inoremap <C-u> <Esc>ui

""highlight VertSplit ctermbg=1 ctermfg=1

